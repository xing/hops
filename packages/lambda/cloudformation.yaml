AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Hops Serverless Express Application / Powered by hops-lambda

Parameters:
  LambdaMemorySize:
    Type: Number
    MinValue: 128
    MaxValue: 1536
    Description: Specify the amount of memory available to your Lambda function
  StageName:
    Type: String
    Description: The name of the API Gateway stage (used as basePath)
  BasePath:
    Type: String
  BucketName:
    Type: String
  BundleName:
    Type: String
  DomainName:
    Type: String
  CertificateArn:
    Type: String

Conditions:
  ShouldAddCustomDomain: !Not [!Equals [!Ref DomainName, '']]
  HasCustomBasePath: !Not [!Equals [!Ref BasePath, '(none)']]

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      DefinitionBody:
        swagger: 2.0
        info:
          title: Hops Serverless Express
        basePath: !Sub '/${BasePath}'
        schemes:
        - https
        paths:
          '/':
            x-amazon-apigateway-any-method:
              produces:
              - text/html
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${HopsLambdaHandler}/invocations'
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          '/{proxy+}':
            x-amazon-apigateway-any-method:
              parameters:
              - name: proxy
                in: path
                required: true
                type: string
              produces:
              - text/html
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${HopsLambdaHandler}/invocations'
                httpMethod: POST
                type: aws_proxy
        x-amazon-apigateway-binary-media-types:
          - '*/*'

  CustomDomainName:
    Type: AWS::ApiGateway::DomainName
    Condition: ShouldAddCustomDomain
    Properties:
      DomainName: !Ref DomainName
      CertificateArn: !Ref CertificateArn

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: ShouldAddCustomDomain
    # awslabs/serverless-application-model#119
    # awslabs/serverless-application-model#70
    DependsOn: ApiGatewayApiStage
    Properties:
      BasePath: !Ref BasePath
      DomainName: !Ref DomainName
      RestApiId: !Ref ApiGatewayApi
      Stage: !Ref StageName

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: '/'
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  LambdaApiGatewayExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt HopsLambdaHandler.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}/*/*'

  HopsLambdaHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref BucketName
        Key: !Ref BundleName
      Handler: node_modules/hops-lambda/lambda.handler
      MemorySize: !Ref LambdaMemorySize
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs6.10
      Timeout: 30

Outputs:
  DistributionDomainName:
    Value: !If
      - ShouldAddCustomDomain
      - !GetAtt CustomDomainName.DistributionDomainName
      - ''
  Url:
    Value: !If
      - ShouldAddCustomDomain
      - !If [HasCustomBasePath, !Sub 'https://${DomainName}/${BasePath}/', !Sub 'https://${DomainName}/']
      - !Sub 'https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${BasePath}/'
